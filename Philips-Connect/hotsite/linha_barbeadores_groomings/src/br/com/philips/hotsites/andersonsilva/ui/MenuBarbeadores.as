package br.com.philips.hotsites.andersonsilva.ui{	import com.greensock.loading.LoaderMax;	import com.gugateider.framework.data.SiteData;	import com.gugateider.framework.utils.TextUtils;		import flash.display.Shape;	import flash.display.Sprite;	import flash.events.Event;	import flash.text.TextField;		import br.com.philips.hotsites.andersonsilva.events.MenuEvent;			/**	 * Class constructor	 * @author gustavo	 * 	 */		public class MenuBarbeadores extends Sprite	{		// objects on the screen		private var menu_title:TextField;		private var menu_title_bg:Shape;		private var menuContainer:Sprite;		public var clickedItem:MenuItem;				// data		private var data	:XMLList;				// initial position		private var _initX	:int = 514;		private var _initY	:int = 473;				public function MenuBarbeadores()		{			super();						// set its data			data = SiteData.instance.XMLDATA.content.barbeadores;						// temporary drawing			/*this.graphics.beginFill( 0xFF0000 , .1 );			this.graphics.drawRect( 0 , initY , initX , 148 );			this.graphics.endFill();						menu_title = TextUtils.createTf( data.menu_title.text() , true );			menu_title.y = initY + 6;			menu_title.x = initX - ( menu_title.textWidth + 15 );						menu_title_bg = new Shape();			menu_title_bg.graphics.beginFill(0xFFFFFF , .2 );			menu_title_bg.graphics.drawRect( 0 , 0 , menu_title.textWidth + 30 , 30 );			menu_title_bg.graphics.endFill();			menu_title_bg.x = initX - menu_title_bg.width;			menu_title_bg.y = initY;						//addChild( menu_title_bg );			//addChild( menu_title );*/						menuContainer = new Sprite();			addChild( menuContainer );						buildMenu();					}				public function get initY():int
		{
			return _initY;
		}		public function get initX():int
		{
			return _initX;
		}		/**		 * Build the Barbeadores Menu 		 * @param none		 */				private function buildMenu():void 		{			var count:int = 0;			var menuItem:MenuItem;			for(var i:int = 0; i < data.item.length(); i++)			{				if( data.item[i].visible.text() == "true" )				{					menuItem = new MenuItem();					menuItem.buildItem( XMLList( data.item[i] ) );					menuItem.x = MenuItem.BARBEADORES_WIDTH * count;					menuItem.addEventListener( MenuEvent.CLICK , menuItemClickHandler );					menuContainer.addChild( menuItem );					count++;				}			}									// align the menu						menuContainer.x = 30;			//menuContainer.x = initX - menuContainer.width - 26;			menuContainer.y = initY + 37;					}				private function menuItemClickHandler(e:MenuEvent):void 		{			clickedItem = e.target as MenuItem;			dispatchEvent( new MenuEvent( e.type , e.data ));		}						public function getItems():Array		{			var returnArray:Array = new Array();			var menuItem:MenuItem;			for(var i:int = 0; i < menuContainer.numChildren; i++)			{				menuItem = menuContainer.getChildAt( i ) as MenuItem;				returnArray.push( menuItem );			}			return returnArray;		}					}}