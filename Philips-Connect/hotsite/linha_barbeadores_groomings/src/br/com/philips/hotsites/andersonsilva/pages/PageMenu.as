package br.com.philips.hotsites.andersonsilva.pages{	import com.greensock.loading.LoaderMax;	import com.gugateider.framework.MainLoaderMax;	import com.gugateider.framework.pages.Page;		import flash.display.Bitmap;	import flash.display.BitmapData;		import br.com.philips.hotsites.andersonsilva.events.MenuEvent;	import br.com.philips.hotsites.andersonsilva.ui.ArrowMenu;	import br.com.philips.hotsites.andersonsilva.ui.MenuBarbeadores;	import br.com.philips.hotsites.andersonsilva.ui.MenuGroomings;	import br.com.philips.hotsites.andersonsilva.ui.MenuItem;
		public class PageMenu extends Page	{						private var menuBarbeadores:MenuBarbeadores;		private var menuGroomings:MenuGroomings;		private var dashedLine		:Bitmap;		private var clickedItem		:MenuItem;		private var arrowMenu		:ArrowMenu;						public function PageMenu()		{						super();						menuBarbeadores = new MenuBarbeadores();			menuBarbeadores.addEventListener( MenuEvent.CLICK , menuItemClickHandler );			addChild( menuBarbeadores );						menuGroomings = new MenuGroomings();			menuGroomings.addEventListener( MenuEvent.CLICK , menuItemClickHandler );			addChild( menuGroomings );						arrowMenu = new ArrowMenu();			addChild( arrowMenu );			arrowMenu.init( menuBarbeadores.initX );			arrowMenu.y = (MainLoaderMax.stage.stageHeight - arrowMenu.height) + 5;						menuGroomings.mask = arrowMenu.maskGroomings;			menuBarbeadores.mask = arrowMenu.maskBarbeadores;					}						private function menuItemClickHandler(e:MenuEvent):void 		{			if(e.target.toString() == "[object MenuBarbeadores]")			{				clickedItem = menuBarbeadores.clickedItem;			} else { 				clickedItem = menuGroomings.clickedItem;			}			disableAll("disable" );			clickedItem.makeBlue();			dispatchEvent( new MenuEvent( e.type , e.data ));			// var menuItem:MenuItem = e.target as MenuItem;			// overMenu( e.data.id.text() , "selected" );		}						public function overMenu( menuID:String="" , state:String="carousel" ):void 		{			var arrBarbeadores:Array = menuBarbeadores.getItems();			var arrGroomings:Array   = menuGroomings.getItems();			var found:Boolean;			var menuItem:MenuItem;			var selectedMenuItem:MenuItem;			for(var i:int = 0; i < arrBarbeadores.length; i++)			{				menuItem = arrBarbeadores[i] as MenuItem;				if(menuItem.id == menuID) 				{					selectedMenuItem = menuItem;					found 			 = true;					break;				}			}			for(i = 0; i < arrGroomings.length; i++)			{				menuItem = arrGroomings[i] as MenuItem;				if(menuItem.id == menuID) 				{					selectedMenuItem = menuItem;					found 			 = true;					break;				}			}						if(found) selectedMenuItem.setSelected( state );		}								public function disableAll(state:String="out"):void 		{			var arrBarbeadores:Array = menuBarbeadores.getItems();			var arrGroomings:Array   = menuGroomings.getItems();			var arr:Array = arrBarbeadores.concat(arrGroomings);			var menuItem:MenuItem;						for(var i:int = 0; i < arr.length; i++)			{				menuItem = arr[i] as MenuItem;				menuItem.setSelected(state);								/*if(clickedItem == menuItem) 				{					menuItem.makeBlue();				}*/							}					}				public function disableActivate():void 		{			clickedItem.setSelected("disable");			//clickedItem = new MenuItem();		}				public function makeBlueSaibaMais(id:String="out"):void 		{			var arrBarbeadores:Array = menuBarbeadores.getItems();			var arrGroomings:Array   = menuGroomings.getItems();			var arr:Array = arrBarbeadores.concat(arrGroomings);			var menuItem:MenuItem;									for(var i:int = 0; i < arr.length; i++)			{				menuItem = arr[i] as MenuItem;				menuItem.setSelected("disable");								if(menuItem.id == id)  menuItem.makeBlue();							}					}							}}