package com.gugateider.framework.assets{	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.display.DisplayObject;	import flash.media.Sound;	import flash.system.ApplicationDomain;	import flash.text.Font;		/**	:: Gugateider Framework - Make it better, keep it simple.   	:: created by Gustavo Teider http://www.gugateider.com      	::	:: This class is responsible to get the assets from the Library SWF	:: @usage var library:LibraryLoader = new LibraryLoader();	:: To start loading the library, you can use the method load();	**/	public class AssetLibrary 	{		// variables		private var applicationDomain : ApplicationDomain ;				/**		 * Class constructor, it gets the applicationDomain from the SWF that's been loaded		 * @param	applicationDomain		 */		public function AssetLibrary ( applicationDomain : ApplicationDomain )		{			this.applicationDomain = applicationDomain ;		}								////////////////////		// PUBLIC METHODS //		////////////////////						/**		 * Function responsible to get a class through a string name		 * @param	id is the name of the class you have as a string		 * @return  return the class as type of Class		 */		public function getClass ( id : String ) : Class		{			return this.applicationDomain.getDefinition ( id ) as Class ;		}				/**		 * Function responsible to get a Display Object through a string name		 * @param	id is the name of the class you have as a string		 * @return  return the class as type of Class		 */		public function getDisplayObject ( id : String ) : DisplayObject		{			var AssetClass : Class = this.getClass ( id ) ;			var displayObject : DisplayObject = new AssetClass ( ) as DisplayObject ;						return displayObject ;		}						/**		 * Function responsible to get a BitmapData through a string name		 * @param	id is the name of the class you have as a string		 * @return  return the class as type of Class		 */		public function getBitmapData ( id : String ) : BitmapData		{			var AssetClass : Class = this.getClass ( id ) ;			var bitmapData : BitmapData = new AssetClass ( null , null ) as BitmapData ;						return bitmapData ;		}						/**		 * Function responsible to get a Bitmap Display Object through a string name		 * @param	id is the name of the class you have as a string		 * @return  return the class as type of Class		 */		public function getBitmap ( id : String ) : Bitmap		{			var bitmapData : BitmapData = this.getBitmapData ( id ) ;			var bitmap : Bitmap = new Bitmap ( bitmapData ) ;						return bitmap ; 		}						/**		 * Function responsible to get a Font through a string name		 * @param	id is the name of the class you have as a string		 * @return  return the class as type of Class		 */		public function getFont ( id : String ) : Font		{			var AssetClass : Class = this.getClass ( id ) ;			var font : Font = new AssetClass ( ) as Font ;						return font ;		}						/**		 * Function responsible to get a Sound through a string name		 * @param	id is the name of the class you have as a string		 * @return  return the class as type of Class		 */		public function getSound ( id : String ) : Sound		{			var AssetClass : Class = this.getClass ( id ) ;			var sound : Sound = new AssetClass ( ) as Sound ;						return sound ;		}	}}